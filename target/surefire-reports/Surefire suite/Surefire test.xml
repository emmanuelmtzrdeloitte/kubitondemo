<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="MacBook-Pro.local" failures="0" tests="3" name="Surefire test" time="8.63" errors="0" timestamp="2025-06-12T16:34:41 CST">
  <testcase classname="base.BaseTest" name="@BeforeClass init" time="8.609">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 400. Message: You have reached 1/1 parallel tests. Try again soon or contact Support to upgrade. 
Host info: host: &amp;apos;MacBook-Pro.local&amp;apos;, ip: &amp;apos;fe80:0:0:0:84a:392:f7f3:7d6d%en0&amp;apos;
Build info: version: &amp;apos;4.13.0&amp;apos;, revision: &amp;apos;ba948ece5b*&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;aarch64&amp;apos;, os.version: &amp;apos;15.5&amp;apos;, java.version: &amp;apos;23.0.2&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:accessKey=b4202a39-ac70-4a72-98c9-f84b0e338516, appium:app=kobiton-store:654582, appium:autoWebview=true, appium:deviceName=Pixel *, appium:platformVersion=15, appium:username=is.emmanuel.deloitte, browserName=chrome, kobiton:captureScreenshots=true, kobiton:deviceGroup=KOBITON, kobiton:deviceOrientation=portrait, kobiton:retainDurationInSeconds=0, kobiton:sessionDescription=, kobiton:sessionName=Automation test session, kobiton:useConfiguration=, platformName=ANDROID}], desiredCapabilities=Capabilities {appium:accessKey: b4202a39-ac70-4a72-98c9-f84..., appium:app: kobiton-store:654582, appium:autoWebview: true, appium:deviceName: Pixel *, appium:platformVersion: 15, appium:username: is.emmanuel.deloitte, browserName: chrome, kobiton:captureScreenshots: true, kobiton:deviceGroup: KOBITON, kobiton:deviceOrientation: portrait, kobiton:retainDurationInSeconds: 0, kobiton:sessionDescription: , kobiton:sessionName: Automation test session, kobiton:useConfiguration: , platformName: ANDROID}}]
Capabilities {appium:accessKey: b4202a39-ac70-4a72-98c9-f84..., appium:app: kobiton-store:654582, appium:autoWebview: true, appium:deviceName: Pixel *, appium:platformVersion: 15, appium:username: is.emmanuel.deloitte, browserName: chrome, kobiton:captureScreenshots: true, kobiton:deviceGroup: KOBITON, kobiton:deviceOrientation: portrait, kobiton:retainDurationInSeconds: 0, kobiton:sessionDescription: , kobiton:sessionName: Automation test session, kobiton:useConfiguration: , platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 400. Message: You have reached 1/1 parallel tests. Try again soon or contact Support to upgrade. 
Host info: host: 'MacBook-Pro.local', ip: 'fe80:0:0:0:84a:392:f7f3:7d6d%en0'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '15.5', java.version: '23.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:accessKey=b4202a39-ac70-4a72-98c9-f84b0e338516, appium:app=kobiton-store:654582, appium:autoWebview=true, appium:deviceName=Pixel *, appium:platformVersion=15, appium:username=is.emmanuel.deloitte, browserName=chrome, kobiton:captureScreenshots=true, kobiton:deviceGroup=KOBITON, kobiton:deviceOrientation=portrait, kobiton:retainDurationInSeconds=0, kobiton:sessionDescription=, kobiton:sessionName=Automation test session, kobiton:useConfiguration=, platformName=ANDROID}], desiredCapabilities=Capabilities {appium:accessKey: b4202a39-ac70-4a72-98c9-f84..., appium:app: kobiton-store:654582, appium:autoWebview: true, appium:deviceName: Pixel *, appium:platformVersion: 15, appium:username: is.emmanuel.deloitte, browserName: chrome, kobiton:captureScreenshots: true, kobiton:deviceGroup: KOBITON, kobiton:deviceOrientation: portrait, kobiton:retainDurationInSeconds: 0, kobiton:sessionDescription: , kobiton:sessionName: Automation test session, kobiton:useConfiguration: , platformName: ANDROID}}]
Capabilities {appium:accessKey: b4202a39-ac70-4a72-98c9-f84..., appium:app: kobiton-store:654582, appium:autoWebview: true, appium:deviceName: Pixel *, appium:platformVersion: 15, appium:username: is.emmanuel.deloitte, browserName: chrome, kobiton:captureScreenshots: true, kobiton:deviceGroup: KOBITON, kobiton:deviceOrientation: portrait, kobiton:retainDurationInSeconds: 0, kobiton:sessionDescription: , kobiton:sessionName: Automation test session, kobiton:useConfiguration: , platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at base.BaseTest.init(BaseTest.java:21)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass init -->
  <testcase classname="base.BaseTest" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="MainPageTests" name="assertPreferenceOptionIsDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- assertPreferenceOptionIsDisplayed -->
  <testcase classname="MainPageTests" name="assertThatClickingPreferenceOptionOpensPreferencePage" time="0.0">
    <skipped/>
  </testcase> <!-- assertThatClickingPreferenceOptionOpensPreferencePage -->
  <testcase classname="MainPageTests" name="assertThatOnPreferenceScreenPreferenceDependenciesOptionIsDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- assertThatOnPreferenceScreenPreferenceDependenciesOptionIsDisplayed -->
</testsuite> <!-- Surefire test -->
